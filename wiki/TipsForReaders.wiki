#summary How to make the most of the documentation reader as a user

=For Readers=

As a user, the documentation reader should feel familiar, analogous to other systems' libraries and help facilities that you may have used.  We hope that it will have performance comparable to local storage options, while offering the most up-to-date convenience of on-line systems.  The most significant difference, however, is probably the ability to select a set of multiple projects' documentation, for an all-in-one reference collection.

Because of this, you shouldn't be afraid to [UrlFormat make your own URLs] to mix-and-match the projects you use often.  Bookmark that, share it with your friends, etc.  At some point, we may expand the feature to include more "social networking" functions to help do that automatically, but that would add a lot more per-user tracking to code.google.com, which takes time; we're not sure yet whether it's better to put that time on that or on other ideas.

Also, the documentation reader is deliberately designed so there's often more than one way to accomplish a given task.  If you _like_ a more unstructured appearance for documentation, and primarily use free-text search to find things, then hide the navigation area and just use the header's search box and the viewing area; the documentation reader is still usefully restricting your searches to just the documentation you asked for.  If, however, you prefer a more structured navigation, it's there.  Do whatever suits your workstyle and tastes.

Remember, too, that you can send the URLs to other people (via IM, email, blogs, etc.), so if you see something interesting, pass it around.  The documentation reader will make it easy for recipients not only to look at what you sent them, but also to find the context from other documentation around it.

Finally, if you find something wrong or missing, remember that the pages are stored in code.google.com's project wikis.  Either send the bug report to the members of that project, or consider offering to join the project so you can fix such issues yourself.  Most projects will value documentation contributions at least as much as code contributions, and it can be a great way to get started understanding the code as well if you want to involve yourself more!