#summary Tips for getting the most of of the documentation reader as a producer.

Maybe you're convinced by now that the documentation reader is, if not the greatest thing since sliced bread, at least pretty useful.  How can you start using it for _your_ docs?  It turns out to be pretty easy.

Your project must be hosted on code.google.com, of course.  You may already be using the Wiki feature for your project; that is the "backing store" behind the documentation reader.  Every page viewed by the reader is actually just a wiki page.  But you can also have other, non-documentation wiki pages, and you need a way to organize the loose pile of wiki entries into coherent documentation.  For that, you need to define a special wiki page named !TableOfContents.  That is the _only_ new requirement to use the documentation reader.

= !TableOfContents: defining the documentation set =
The !TableOfContents may have some preamble text if you want it to (sometimes users could choose to view it as a documentation page on its own!), but the main focus is a nested structure of bulleted lists (using the space-indented "*" wiki markup).  Each entry in that nested list is an entry in the table of contents; the list nesting defines sections and sub-sections.  

In general, table of content entries will be links, using markup syntax like this:

{{{  * [WikiWord Title for Wiki Word entry] }}}

This will create a section titled "Title for Wiki Word entry," and linking to the content on the wiki page !WikiWord.  You may, optionally, have entries that are not links, with markup like this:

{{{  * Title for a section heading without its own wiki entry }}}

Which will, as the title suggests, make an entry which is the heading of a collection of ohter entries, but for which there is no content in the wiki.  To display these nodes, the documentation reader will create a page that consists only of the title and a linked list of the available children.

= Index: sugesting search terms =

The other special wiki entry is named Index.  This is an optional entry, but if present, should be a flat bulleted list of index terms.  The documentation reader will collect and collate the index terms for all the projects displayed; when a user selects an index terms, the reader will search for any pages containing that term and  display the results.  This is essentially equivalent to the user typing a search keyword, but may be useful if the user doesn't know what term to search for, or if the user is (as some of us do) browsing the index itself for interesting items.

= Editing content =

When a project member is using the documentation reader, it will note that they have write permissoins, and display an "Edit" link near the top-right, next to the Print icon, when users are viewing pages from your project.  When they view pages from other projects, of coures, the link may not appear.

Clicking on the Edit link brings the user to the wiki editing page for that topic, allowing a rapid find/edit/save cycle to fix documentation errors and to update for advances in your project.

= Reorganizing content =

Content may be reorganized or re-indexed at any time, merely by revising the !TableOfContents and Index pages.  There is no analog to the Edit link for these more structural changes, however: go to the wiki edit page yourself, for either !TableOfContents or Index.